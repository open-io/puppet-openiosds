[pipeline:main]
pipeline = catch_errors proxy-logging cache swift3 s3token authtoken healthcheck keystoneauth proxy-logging proxy-server

[app:proxy-server]
use = egg:oioswift#main
sds_namespace = <%= @ns %>
sds_proxy_url = <%= @sds_proxy_url %>
bind_ip = <%= @ipaddress %>
bind_port = <%= @port %>
user = <%= scope['openiosds::user'] %>
object_post_as_copy = <%= @object_post_as_copy %>
allow_account_management = true
account_autocreate = true
log_name = OIO,<%= @ns %>,<%= @type %>,<%= @num %>

[filter:gatekeeper]
use = egg:swift#gatekeeper

[filter:proxy-logging]
use = egg:swift#proxy_logging
access_log_headers = <%= @access_log_headers %>
access_log_headers_only = <%= @access_log_headers_only %>

#[filter:tempauth]
#use = egg:swift#tempauth
#user_test_tester = testing .admin

#[filter:tempurl]
#use = egg:swift#tempurl
#user_test_tester = 

[filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = <%= @operator_roles %>

[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
auth_uri = <%= @auth_uri %>
identity_uri = <%= @identity_uri %>
admin_tenant_name = <%= @admin_tenant_name %>
admin_user = <%= @admin_user %>
admin_password = <%= @admin_password %>
delay_auth_decision = <%= @delay_auth_decision %>

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:ratelimit]
use = egg:swift#ratelimit

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = <%= @memcache_servers %>

[filter:swift3]
use = egg:swift3#swift3

[filter:staticweb]
use = egg:swift#staticweb

[filter:s3token]
paste.filter_factory = keystonemiddleware.s3_token:filter_factory
auth_port = <%= @auth_port %>
auth_protocol = <%= @auth_protocol %>
auth_host = <%= @auth_host %>
