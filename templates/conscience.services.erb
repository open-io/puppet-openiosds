# Service pools declarations
# ----------------------------
#
# Pools are automatically created if not defined in configuration,
# according to storage policy or service update policy rules.
#
# "targets" is a ';'-separated list.
# Each target is a ','-separated list of:
# - the number of services to pick,
# - the name of a slot where to pick the services,
# - the name of a slot where to pick services if there is
#   not enough in the previous slot
# - and so on...
#
# "nearby_mode" is a boolean telling to find services close to each other
# instead of far from each other.
#
#### power user options, don't set them unless you know what you are doing!
# "mask" is a 64 bits hexadecimal mask used to check service distance.
# It defaults to FFFFFFFFFFFF0000. It can also be specified as "/48".
#
# "mask_max_shift" is the maximum number of bits to shift the mask
# to degrade it when distance requirement are not satisfiable.
# It defaults to 16.
#

<% @pools.keys.sort.each do |key| -%>
[pool:<%= key %>]
<% if @pools[key].has_key?('targets') -%>
targets=<%= @pools[key]['targets'] %>
<% end -%>
<% if @pools[key].has_key?('mask') -%>
mask=<%= @pools[key]['mask'] %>
<% end -%>
<% end -%>


# Service types declarations
# ---------------------------

<% @services_score_expr.keys.sort.each do |key| -%>
[type:<%= key -%>]
score_expr=<%= @services_score_expr[key] %>
<% if @services_score_timeout.has_key?(key) -%>
score_timeout=<%= @services_score_timeout[key] %>
<% end -%>
<% if @score_lock_at_first_register.has_key?(key) -%>
lock_at_first_register=<%= @score_lock_at_first_register[key] %>
<% end -%>

<% end -%>


