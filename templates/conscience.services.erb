# Service pools declarations
# ----------------------------
#
# Pools are automatically created if not defined in configuration,
# according to storage policy or service update policy rules.
#
# "targets" is a ';'-separated list.
# Each target is a ','-separated list of:
# - the number of services to pick,
# - the name of a slot where to pick the services,
# - the name of a slot where to pick services if there is
#   not enough in the previous slot
# - and so on...
#
# "nearby_mode" is a boolean telling to find services close to each other
# instead of far from each other.
#
# "min_dist" is the absolute minimum distance between services returned
# by the pool. It defaults to 1, which is the minimum. If you set it too
# high, there is a risk the pool fails to find a service set matching
# all the criteria.
#
# "max_dist" is the distance between services that the pool will try to
# ensure. This option defaults to 4, which is the maximum. If you know
# that all the services are close together, you can reduce this number
# to accelerate the research.
#
# "warn_dist" is the distance between services at which the pool will emit
# a warning, for further improvement.
#

<% @pools.keys.sort.each do |key| -%>
[pool:<%= key %>]
<% if @pools[key].has_key?('targets') -%>
targets=<%= @pools[key]['targets'] %>
<% end -%>
<% if @pools[key].has_key?('min_dist') -%>
min_dist=<%= @pools[key]['min_dist'] %>
<% end -%>
<% if @pools[key].has_key?('nearby_mode') -%>
nearby_mode=<%= @pools[key]['nearby_mode'] %>
<% end -%>
<% end -%>


# Service types declarations
# ---------------------------

<% @services_score_expr.keys.sort.each do |key| -%>
[type:<%= key -%>]
score_expr=<%= @services_score_expr[key] %>
<% if @services_score_timeout.has_key?(key) -%>
score_timeout=<%= @services_score_timeout[key] %>
<% end -%>
<% if @score_lock_at_first_register.has_key?(key) -%>
lock_at_first_register=<%= @score_lock_at_first_register[key] %>
<% end -%>

<% end -%>


